//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
LittleEndian();
local uint64 i<hidden=true>;
local uint64 savepoint<hidden=true>;

struct Block00
{
    uint32 unk_00[4];
};

struct Block01
{
    uint32 unk_00[3];
};


struct TxHeader
{
    uint32 width;
    uint32 height;
    char type[4];
    uint32 unk_00;
    uint32 unk_01[8];
    uint32 mips[8];
};

uint32 id;
uint32 unk_00;
uint32 tx_ofc;
FSeek(tx_ofc);
savepoint = FTell();
uint16 tx_num_00<fgcolor=0x008000>;
uint16 tx_num_01;
uint32 nulls[3];
uint32 unk_tx_block_00[tx_num_00]<fgcolor=0x808000>;
uint32 unk_tx_block_01[tx_num_01]<fgcolor=0x308090>;
for(i=0; i<tx_num_00; i++)
{
    FSeek(savepoint+unk_tx_block_00[i]);
    Block00 unk_block_00<fgcolor=0x80cc00>;
};

for(i=0; i<tx_num_01; i++)
{
    FSeek(savepoint+unk_tx_block_01[i]);
    Block00 unk_block_01<fgcolor=0x8050c0>;
};
//uint32 nulls_00[8];
//TxHeader tx_01<fgcolor=0x808000>;
//uint32 nulls_01[8];
//TxHeader tx_02<fgcolor=0x808000>;
//uint32 nulls_02[8];
//TxHeader tx_03<fgcolor=0x808000>;

