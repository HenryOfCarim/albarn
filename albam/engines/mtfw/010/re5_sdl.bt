//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
LittleEndian();
local uint64 i<hidden=true>;
local uint64 checkpoint<hidden=true>;

struct Block_00
{
    uint32 unk_00;
    uint32 unk_01;
    uint32 str_ofc;
    uint32 unk_03;
    uint32 unk_04;
    uint32 unk_05;
};

struct Block_01
{
    uint32 unk_00[3];
};

struct SDLHeader
{
    uint32 magic;
    uint16 version;
    uint16 unk_num;
    uint32 unk_02;
    uint32 unk_03;
    uint32 str_ofc;
};

SDLHeader header<fgcolor=cYellow>;
checkpoint = FTell();
for(i=0; i<(header.unk_num); i++)
{
    FSeek(checkpoint);
    Block_00 block<fgcolor=0x808000>;
    checkpoint = FTell();
    FSeek();
};
//Block_00 test[unk_num]<fgcolor=0x808000>;

//Block_01 test_1[unk_num]<fgcolor=0x800080>;
//uint32 unk_04[10];